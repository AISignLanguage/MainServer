# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set environment values
      run: |
        cd ./src/main/resources
        touch ./application.yaml
        echo "${{secrets.ENV}}" > ./application.yaml
      shell: bash
  
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v3
      with:
        arguments: clean build -x test

    - name: Docker hub login
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_NAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}

    - name : Docker image build
      run: |
        cd ./src/main/resources
        docker build -t ${{secrets.DOCKERHUB_NAME}}/goyo-spring:latest .

    - name: Docker image push
      run: docker push ${{secrets.DOCKERHUB_NAME}}/goyo-spring:latest

    - name: Deploy Instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.GCP_HOST}}
        username: ${{secrets.GCP_NAME}}
        key: ${{secrets.GCE_SA_KEY}}
        script: |  
          sudo docker login -u ${{secrets.DOCKERHUB_NAME}} -p $ {{secrets.DOCKERHUB_PASSWORD}}
          sudo docker-compose down
          sudo docker pull ${{secrets.DOCKERHUB_NAME}}/goyo-spring:latest
          sudo docker rm -f $(sudo docker ps -aqf "name=*spring*") 2>/dev/null || true
          cd /home/pjw99032986
          sudo docker-compose up -d
